{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e09606cb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"encoder\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                   Output Shape         Param #     Connected to                     \n",
      "==================================================================================================\n",
      " input_1 (InputLayer)           [(None, 12)]         0           []                               \n",
      "                                                                                                  \n",
      " dense (Dense)                  (None, 64)           832         ['input_1[0][0]']                \n",
      "                                                                                                  \n",
      " dense_1 (Dense)                (None, 32)           2080        ['dense[0][0]']                  \n",
      "                                                                                                  \n",
      " dense_2 (Dense)                (None, 2)            66          ['dense_1[0][0]']                \n",
      "                                                                                                  \n",
      " dense_3 (Dense)                (None, 2)            66          ['dense_1[0][0]']                \n",
      "                                                                                                  \n",
      " sampling (Sampling)            (None, 2)            0           ['dense_2[0][0]',                \n",
      "                                                                  'dense_3[0][0]']                \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 3,044\n",
      "Trainable params: 3,044\n",
      "Non-trainable params: 0\n",
      "__________________________________________________________________________________________________\n",
      "Model: \"decoder\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " input_2 (InputLayer)        [(None, 2)]               0         \n",
      "                                                                 \n",
      " dense_4 (Dense)             (None, 32)                96        \n",
      "                                                                 \n",
      " dense_5 (Dense)             (None, 64)                2112      \n",
      "                                                                 \n",
      " dense_6 (Dense)             (None, 12)                780       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 2,988\n",
      "Trainable params: 2,988\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "Epoch 1/100\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-10-28 14:00:58.169128: W tensorflow/tsl/platform/profile_utils/cpu_utils.cc:128] Failed to get CPU frequency: 0 Hz\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 0s 74ms/step - loss: 0.7658 - val_loss: 0.7657\n",
      "Epoch 2/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.7476 - val_loss: 0.7247\n",
      "Epoch 3/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.7184 - val_loss: 0.6841\n",
      "Epoch 4/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.6719 - val_loss: 0.6268\n",
      "Epoch 5/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.6705 - val_loss: 0.6431\n",
      "Epoch 6/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.5964 - val_loss: 0.6079\n",
      "Epoch 7/100\n",
      "2/2 [==============================] - 0s 8ms/step - loss: 0.5690 - val_loss: 0.5439\n",
      "Epoch 8/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.5491 - val_loss: 0.5384\n",
      "Epoch 9/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.4952 - val_loss: 0.5129\n",
      "Epoch 10/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.4876 - val_loss: 0.4643\n",
      "Epoch 11/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.4536 - val_loss: 0.4726\n",
      "Epoch 12/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.4334 - val_loss: 0.4618\n",
      "Epoch 13/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.3973 - val_loss: 0.3475\n",
      "Epoch 14/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.3519 - val_loss: 0.4180\n",
      "Epoch 15/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.3460 - val_loss: 0.3056\n",
      "Epoch 16/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.3068 - val_loss: 0.3356\n",
      "Epoch 17/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.2801 - val_loss: 0.2436\n",
      "Epoch 18/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.2727 - val_loss: 0.1883\n",
      "Epoch 19/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.2440 - val_loss: 0.2673\n",
      "Epoch 20/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.2366 - val_loss: 0.1873\n",
      "Epoch 21/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.2288 - val_loss: 0.2489\n",
      "Epoch 22/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.1883 - val_loss: 0.1651\n",
      "Epoch 23/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.2050 - val_loss: 0.1515\n",
      "Epoch 24/100\n",
      "2/2 [==============================] - 0s 8ms/step - loss: 0.1924 - val_loss: 0.1680\n",
      "Epoch 25/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.1645 - val_loss: 0.1962\n",
      "Epoch 26/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.1373 - val_loss: 0.1406\n",
      "Epoch 27/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.1375 - val_loss: 0.1300\n",
      "Epoch 28/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.1175 - val_loss: 0.0881\n",
      "Epoch 29/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.1083 - val_loss: 0.0712\n",
      "Epoch 30/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0967 - val_loss: 0.0972\n",
      "Epoch 31/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.1098 - val_loss: 0.1475\n",
      "Epoch 32/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0745 - val_loss: 0.0877\n",
      "Epoch 33/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0688 - val_loss: 0.0475\n",
      "Epoch 34/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0806 - val_loss: 0.0922\n",
      "Epoch 35/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0682 - val_loss: 0.0914\n",
      "Epoch 36/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0679 - val_loss: 0.0649\n",
      "Epoch 37/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0806 - val_loss: 0.0501\n",
      "Epoch 38/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0575 - val_loss: 0.0486\n",
      "Epoch 39/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0593 - val_loss: 0.0777\n",
      "Epoch 40/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0452 - val_loss: 0.0544\n",
      "Epoch 41/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0581 - val_loss: 0.0545\n",
      "Epoch 42/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0564 - val_loss: 0.0591\n",
      "Epoch 43/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0610 - val_loss: 0.0660\n",
      "Epoch 44/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0403 - val_loss: 0.0671\n",
      "Epoch 45/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0606 - val_loss: 0.0430\n",
      "Epoch 46/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0414 - val_loss: 0.0372\n",
      "Epoch 47/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0496 - val_loss: 0.0481\n",
      "Epoch 48/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0432 - val_loss: 0.0259\n",
      "Epoch 49/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0449 - val_loss: 0.0615\n",
      "Epoch 50/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0438 - val_loss: 0.0335\n",
      "Epoch 51/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0506 - val_loss: 0.0502\n",
      "Epoch 52/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0436 - val_loss: 0.0301\n",
      "Epoch 53/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0505 - val_loss: 0.0308\n",
      "Epoch 54/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0535 - val_loss: 0.0426\n",
      "Epoch 55/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0403 - val_loss: 0.0512\n",
      "Epoch 56/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0379 - val_loss: 0.0407\n",
      "Epoch 57/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0377 - val_loss: 0.0577\n",
      "Epoch 58/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0447 - val_loss: 0.0488\n",
      "Epoch 59/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0312 - val_loss: 0.0288\n",
      "Epoch 60/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0447 - val_loss: 0.0381\n",
      "Epoch 61/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0400 - val_loss: 0.0236\n",
      "Epoch 62/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0382 - val_loss: 0.0300\n",
      "Epoch 63/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0424 - val_loss: 0.0267\n",
      "Epoch 64/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0403 - val_loss: 0.0224\n",
      "Epoch 65/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0405 - val_loss: 0.0338\n",
      "Epoch 66/100\n",
      "2/2 [==============================] - 0s 8ms/step - loss: 0.0271 - val_loss: 0.0240\n",
      "Epoch 67/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0337 - val_loss: 0.0332\n",
      "Epoch 68/100\n",
      "2/2 [==============================] - 0s 8ms/step - loss: 0.0348 - val_loss: 0.0345\n",
      "Epoch 69/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0256 - val_loss: 0.0281\n",
      "Epoch 70/100\n",
      "2/2 [==============================] - 0s 8ms/step - loss: 0.0291 - val_loss: 0.0282\n",
      "Epoch 71/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0303 - val_loss: 0.0456\n",
      "Epoch 72/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0359 - val_loss: 0.0269\n",
      "Epoch 73/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0397 - val_loss: 0.0347\n",
      "Epoch 74/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0431 - val_loss: 0.0259\n",
      "Epoch 75/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0340 - val_loss: 0.0389\n",
      "Epoch 76/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0400 - val_loss: 0.0448\n",
      "Epoch 77/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0292 - val_loss: 0.0397\n",
      "Epoch 78/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0336 - val_loss: 0.0447\n",
      "Epoch 79/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0355 - val_loss: 0.0244\n",
      "Epoch 80/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0375 - val_loss: 0.0350\n",
      "Epoch 81/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0361 - val_loss: 0.0372\n",
      "Epoch 82/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0240 - val_loss: 0.0311\n",
      "Epoch 83/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0249 - val_loss: 0.0285\n",
      "Epoch 84/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0293 - val_loss: 0.0268\n",
      "Epoch 85/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0298 - val_loss: 0.0333\n",
      "Epoch 86/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0280 - val_loss: 0.0277\n",
      "Epoch 87/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0296 - val_loss: 0.0273\n",
      "Epoch 88/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0215 - val_loss: 0.0244\n",
      "Epoch 89/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0276 - val_loss: 0.0255\n",
      "Epoch 90/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0260 - val_loss: 0.0335\n",
      "Epoch 91/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0316 - val_loss: 0.0223\n",
      "Epoch 92/100\n",
      "2/2 [==============================] - 0s 8ms/step - loss: 0.0263 - val_loss: 0.0259\n",
      "Epoch 93/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0233 - val_loss: 0.0208\n",
      "Epoch 94/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0217 - val_loss: 0.0352\n",
      "Epoch 95/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0283 - val_loss: 0.0285\n",
      "Epoch 96/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0257 - val_loss: 0.0292\n",
      "Epoch 97/100\n",
      "2/2 [==============================] - 0s 9ms/step - loss: 0.0247 - val_loss: 0.0259\n",
      "Epoch 98/100\n",
      "2/2 [==============================] - 0s 10ms/step - loss: 0.0240 - val_loss: 0.0254\n",
      "Epoch 99/100\n",
      "2/2 [==============================] - 0s 8ms/step - loss: 0.0244 - val_loss: 0.0346\n",
      "Epoch 100/100\n",
      "2/2 [==============================] - 0s 8ms/step - loss: 0.0254 - val_loss: 0.0331\n",
      "Reconstruction Loss: 0.02568918466567993\n",
      "2/2 [==============================] - 0s 743us/step\n",
      "[[-1.7567922  -1.429202  ]\n",
      " [-3.260287   -1.9974568 ]\n",
      " [-1.4204657  -1.0907193 ]\n",
      " [-3.330041   -2.0871713 ]\n",
      " [-1.5933229  -1.3597902 ]\n",
      " [-3.2299428  -1.9703158 ]\n",
      " [-1.4391952  -1.2937808 ]\n",
      " [-3.1598244  -1.9862288 ]\n",
      " [-1.2369914  -1.2310796 ]\n",
      " [-3.0922873  -1.8649074 ]\n",
      " [-3.6045327  -2.3074098 ]\n",
      " [-3.4410756  -2.1541865 ]\n",
      " [-3.5221283  -2.226835  ]\n",
      " [-3.3660853  -2.0927706 ]\n",
      " [-1.762999   -1.7195477 ]\n",
      " [-1.3574716  -1.5934443 ]\n",
      " [-0.65632164 -1.0816472 ]\n",
      " [-0.42701587 -0.9557449 ]\n",
      " [-0.11555476 -0.87395513]\n",
      " [-1.0755734  -1.1656226 ]\n",
      " [-1.0585763  -1.1450022 ]\n",
      " [-0.70002645 -0.98940194]\n",
      " [-1.0928411  -1.204676  ]\n",
      " [-0.9424362  -1.1356947 ]\n",
      " [-1.1308941  -1.1867962 ]\n",
      " [-1.7174848  -1.5381366 ]\n",
      " [-2.3133428  -1.9975023 ]\n",
      " [-0.70046335 -1.1325862 ]\n",
      " [-0.572627   -1.0771403 ]\n",
      " [-0.46810776 -1.0173588 ]\n",
      " [-1.0788869  -1.3769833 ]\n",
      " [-0.41207886 -0.9972763 ]\n",
      " [-2.3002615  -1.939512  ]\n",
      " [-0.37375328 -0.9991602 ]\n",
      " [-2.2666566  -1.9457058 ]\n",
      " [-0.423186   -0.9323214 ]\n",
      " [-0.4370885  -0.9590369 ]\n",
      " [-1.1147106  -1.3579618 ]\n",
      " [-0.4618359  -1.0307086 ]\n",
      " [-2.256262   -1.9259562 ]\n",
      " [-0.43961918 -1.0094405 ]\n",
      " [-0.43557385 -0.9963206 ]\n",
      " [-2.2809188  -1.8679523 ]\n",
      " [-0.92850935 -1.133381  ]\n",
      " [-2.362289   -1.9421043 ]\n",
      " [-2.4783368  -1.936781  ]\n",
      " [-2.4434056  -1.9635779 ]\n",
      " [-1.0799924  -1.2397133 ]\n",
      " [-2.4420543  -1.8828893 ]\n",
      " [-0.7528953  -1.0711403 ]\n",
      " [-2.2993047  -1.8625472 ]\n",
      " [-0.89516735 -1.0680206 ]\n",
      " [-2.2448328  -1.8722224 ]\n",
      " [-2.570948   -1.9315413 ]\n",
      " [-2.3797703  -1.937157  ]\n",
      " [-1.0766718  -1.1684155 ]\n",
      " [-1.7003278  -1.5079613 ]\n",
      " [ 0.02684227 -0.56407213]\n",
      " [-0.08758052 -0.7444663 ]\n",
      " [-1.9390029  -1.4882436 ]]\n",
      "(60, 2)\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA2IAAAK7CAYAAACQ6TzBAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAB6sElEQVR4nO3deXxU1f3/8fckJEGGZBBGCEtCcMtSIiZQFagVXEEBwQqiVsQi39pWqVXcahWwFap1xa1WLWClLq2AtSoVBbRUVMCgSMKiEicBAoRlEgIEkrm/P84vQyYJJJPM3Mnyej4e8xjm3nPvnMnMaN45536Ow7IsSwAAAAAA20RFugMAAAAA0NYQxAAAAADAZgQxAAAAALAZQQwAAAAAbEYQAwAAAACbEcQAAAAAwGYEMQAAAACwGUEMAAAAAGxGEAMAAAAAmxHEAMBmc+fOlcPh0OrVq0NyvpkzZ2rRokUhOVd93n33XU2fPr3B7S3L0muvvaZzzz1XXbt2Vfv27dWrVy9dcsklevHFF8PXUZtMnz5dDofDf4uJiVFycrImT56soqKiSHev2Qr2c1SXv//973riiSfq3OdwOJp8fgAIN4IYALRwdgexGTNmNLj9Pffco6uvvlrp6el68cUX9d577+kPf/iDunXrprfeeiuMPbXX4sWLtXLlSr333nsaP368/vrXv+qCCy7QkSNHIt21ZinYz1FdjhfEVq5cqRtvvLFJ5weAcGsX6Q4AAFqngwcP6oknntCECRP0l7/8JWDfxIkT5fP5ItSz0Ovfv7/cbrck6cILL1RxcbHmzJmjFStWaOjQobb25eDBgzrhhBNsfc7m5pxzzol0FwCgXoyIAUAzdOjQId1+++0688wz5XK51LlzZw0cOLDWKJLD4VBZWZnmzZvnnx43ZMgQ//6ioiL9/Oc/V69evRQbG6s+ffpoxowZqqio8LfJz8+Xw+HQI488oscee0x9+vRRx44dNXDgQH366af+dhMnTtQzzzzjf96qW35+fp2voaysTOXl5erevXud+6Oijv4vqKoPDz/8sB588EElJyerffv2GjBggD788MOA47755hvdcMMNOu2009ShQwf17NlTI0eO1Lp162o9x759+3T77bfr5JNPVlxcnLp27apLL71UGzZs8Lc5fPiw/vCHPygtLU1xcXE66aSTdMMNN2jXrl119rshBgwYIEnasWNHwPYPPvhAF1xwgRISEtShQwcNHjy41uurmu6Yk5OjK664QgkJCXK5XPrpT39aq08pKSkaMWKEFixYoKysLLVv394/0tSQ916SnnvuOfXr108dO3ZUfHy80tLS9Nvf/jagjZ2fo2eeeUY//vGP1bVrVzmdTmVmZurhhx8OGF0cMmSI3nnnHX3//fcB56hS19TEr7/+WpdffrlOPPFEtW/fXmeeeabmzZsX0Gb58uVyOBx69dVXde+996pHjx5KSEjQhRdeqI0bNwoAQokRMQBohsrLy7Vnzx5NnTpVPXv21OHDh/XBBx/oiiuu0Jw5czRhwgRJZgrW+eefr6FDh+q+++6TJCUkJEgyvzyfddZZioqK0v33369TTjlFK1eu1B/+8Afl5+drzpw5Ac/5zDPPKC0tzT/d67777tOll16qLVu2yOVy6b777lNZWZn++c9/auXKlf7jjhW03G63Tj31VD377LP+AJSamhrwC3NNTz/9tHr37q0nnnhCPp9PDz/8sIYPH66PPvpIAwcOlCRt27ZNXbp00R//+EeddNJJ2rNnj+bNm6ezzz5bOTk5Sk1NlSSVlpbqRz/6kfLz83XXXXfp7LPP1v79+/Xxxx9r+/btSktLk8/n0+WXX67//ve/uvPOOzVo0CB9//33mjZtmoYMGaLVq1c3anRpy5YtkqTTTz/dv+2VV17RhAkTdPnll2vevHmKiYnR888/r0suuUT/+c9/dMEFFwScY8yYMRo3bpxuuukmrV+/Xvfdd59yc3P12WefKSYmxt/uiy++UF5enn73u9+pT58+cjqdDX7vX3vtNf3yl7/ULbfcokceeURRUVH65ptvlJub6z+/3Z+jb7/9Vtdcc4369Omj2NhYffnll3rwwQe1YcMG/fWvf5UkPfvss/q///s/ffvtt1q4cGG978fGjRs1aNAgde3aVbNnz1aXLl30yiuvaOLEidqxY4fuvPPOgPa//e1vNXjwYL344osqKSnRXXfdpZEjRyovL0/R0dH1Ph8ANIgFALDVnDlzLEnWqlWrGnxMRUWFdeTIEWvSpElWVlZWwD6n02ldf/31tY75+c9/bnXs2NH6/vvvA7Y/8sgjliRr/fr1lmVZ1pYtWyxJVmZmplVRUeFv9/nnn1uSrFdffdW/7Ve/+pUVzP86Pv/8cys5OdmSZEmy4uPjrREjRlgvv/yy5fP5/O2q+tCjRw/r4MGD/u0lJSVW586drQsvvPCYz1FRUWEdPnzYOu2006zf/OY3/u0PPPCAJclasmTJMY999dVXLUnWm2++GbB91apVliTr2WefPe7rmzZtmiXJKioqso4cOWLt3bvXeuONNyyn02ldffXV/nZlZWVW586drZEjRwYcX1lZafXr188666yzap2z+muxLMuaP3++Jcl65ZVX/Nt69+5tRUdHWxs3bgxo29D3/uabb7Y6dep03NcYyc9RZWWldeTIEevll1+2oqOjrT179vj3XXbZZVbv3r3rPE6SNW3aNP/j8ePHW3FxcZbH4wloN3z4cKtDhw7Wvn37LMuyrGXLllmSrEsvvTSg3RtvvGFJslauXFlvnwGgoZiaCADN1D/+8Q8NHjxYHTt2VLt27RQTE6OXXnpJeXl5DTr+3//+t4YOHaoePXqooqLCfxs+fLgk6aOPPgpof9lllwX8tf+MM86QJH3//feNfg0//OEP9c0332jx4sX67W9/q4EDB+rDDz/UhAkTNGrUKFmWFdD+iiuuUPv27f2P4+PjNXLkSH388ceqrKyUJFVUVGjmzJnKyMhQbGys2rVrp9jYWG3evDngZ/Pee+/p9NNP14UXXnjM/v373/9Wp06dNHLkyICf0ZlnnqnExEQtX768Qa8zMTFRMTExOvHEEzVu3Dj1798/YNrbJ598oj179uj6668PeB6fz6dhw4Zp1apVKisrCzjntddeG/B43LhxateunZYtWxaw/YwzzggYeat6XQ1578866yzt27dPV199td566y0VFxfX+TOy83OUk5OjUaNGqUuXLoqOjlZMTIwmTJigyspKbdq0qUHnqGnp0qW64IILlJSUFLB94sSJOnDgQMDInCSNGjUq4HEovgsAUBNTEwGgGVqwYIHGjRunsWPH6o477lBiYqLatWun5557zj89qz47duzQ22+/HTCNrbqav3R36dIl4HFcXJwkU/yhKWJiYnTJJZfokksukSTt3r1bV155pf7973/rvffe06WXXupvm5iYWOv4xMREHT58WPv375fL5dJtt92mZ555RnfddZfOO+88nXjiiYqKitKNN94Y0Nddu3YpOTn5uH3bsWOH9u3bp9jY2Dr31xVM6vLBBx/I5XJpz549+stf/qI333xTt9xyi/785z/7n0eSrrzyymOeY8+ePXI6nQGvu7p27dqpS5cu2r17d8D2uqaGNvS9v+6661RRUaEXXnhBP/nJT+Tz+fTDH/5Qf/jDH3TRRRcFda4qTfkceTwenXvuuUpNTdWTTz6plJQUtW/fXp9//rl+9atfNfqzuHv37jp/Tj169PDvD9VrAICGIogBQDP0yiuvqE+fPnr99dcDrqkqLy9v8DncbrfOOOMMPfjgg3Xur/ol1G5dunTRrbfequXLl+vrr78OCGJ1rb1VVFSk2NhYdezYUdLRa61mzpwZ0K64uFidOnXyPz7ppJNUWFh43L643W516dJFixcvrnN/fHx8g15Tv379/FUTL7roIl1yySX6y1/+okmTJumHP/yhf99TTz11zIp+3bp1C3hcVFSknj17+h9XVFRo9+7dtUJCXdfcBfPe33DDDbrhhhtUVlamjz/+WNOmTdOIESO0adMm9e7d29bP0aJFi1RWVqYFCxaod+/e/u1r165t0nm7dOmi7du319q+bds2SfK/PwBgJ4IYADRDDodDsbGxAb9kFxUV1bn2VlxcXJ1/qR8xYoTeffddnXLKKTrxxBND0q/qIwP1FbE4cuSISkpKagUHSf4phDV/iV+wYIH+9Kc/+acnlpaW6u2339a5557rn+7mcDj8/ajyzjvvaOvWrTr11FP924YPH677779fS5cu1fnnn19nH0eMGKHXXntNlZWVOvvss4/7ehrK4XDomWeeUUZGhn73u9/pP//5jwYPHqxOnTopNzdXN998c4POM3/+fPXv39//+I033lBFRUVAVcxjacx773Q6NXz4cB0+fFijR4/W+vXr1bt3b1s/R1Wf9+rvr2VZeuGFF+o8R0NHqC644AItXLhQ27ZtC/jMvfzyy+rQoQPl7gFEBEEMACJk6dKldZZ+v/TSS/0lyX/5y1/qyiuvVEFBgX7/+9+re/fu2rx5c0D7zMxMLV++XG+//ba6d++u+Ph4paam6oEHHtCSJUs0aNAgTZkyRampqTp06JDy8/P17rvv6s9//rN69eoVVJ8zMzMlSQ899JCGDx+u6OhonXHGGXVO7fN6vUpJSdHYsWN14YUXKikpSfv379fy5cv15JNPKj09XVdccUXAMdHR0brooot02223yefz6aGHHlJJSUnA4r8jRozQ3LlzlZaWpjPOOENr1qzRn/70p1qv5dZbb9Xrr7+uyy+/XHfffbfOOussHTx4UB999JFGjBihoUOHavz48Zo/f74uvfRS/frXv9ZZZ52lmJgYFRYWatmyZbr88ss1ZsyYoH5GknTaaafp//7v//Tss89qxYoV+tGPfqSnnnpK119/vfbs2aMrr7xSXbt21a5du/Tll19q165deu655wLOsWDBArVr104XXXSRv2piv379NG7cuHqfv6Hv/eTJk3XCCSdo8ODB6t69u4qKijRr1iy5XC798Ic/DOpcwTjW5+iiiy5SbGysrr76at155506dOiQnnvuOe3du7fOcyxYsEDPPfec+vfvr6ioKP+yATVNmzbNf63b/fffr86dO2v+/Pl655139PDDD8vlcgXVfwAIiUhXCwGAtqaqauKxblu2bLEsy7L++Mc/WikpKVZcXJyVnp5uvfDCC/6KetWtXbvWGjx4sNWhQwdLknXeeef59+3atcuaMmWK1adPHysmJsbq3Lmz1b9/f+vee++19u/fb1nW0Wp3f/rTn2r1VTWqz5WXl1s33nijddJJJ1kOhyOgvzWVl5dbjzzyiDV8+HArOTnZiouLs9q3b2+lp6dbd955p7V7925/26o+PPTQQ9aMGTOsXr16WbGxsVZWVpb1n//8J+C8e/futSZNmmR17drV6tChg/WjH/3I+u9//2udd955Aa+9qu2vf/1rKzk52YqJibG6du1qXXbZZdaGDRv8bY4cOWI98sgjVr9+/az27dtbHTt2tNLS0qyf//zn1ubNm4/1NlqWdbTC4a5du2rt27Fjh9WxY0dr6NCh/m0fffSRddlll1mdO3e2YmJirJ49e1qXXXaZ9Y9//KPWOdesWWONHDnS6tixoxUfH29dffXV1o4dOwKeo3fv3tZll11WZ98a8t7PmzfPGjp0qNWtWzcrNjbW6tGjhzVu3Djrq6++Cvpcofocvf322/73omfPntYdd9xhvffee5Yka9myZf5z7Nmzx7ryyiutTp06+c9xrOezLMtat26dNXLkSMvlclmxsbFWv379rDlz5gS0qaqaWP39qP7aarYHgKZwWFaNklUAANgsPz9fffr00Z/+9CdNnTo10t2JqOnTp2vGjBnatWsX1y4BQCtG+XoAAAAAsBlBDAAAAABsxtREAAAAALAZI2IAAAAAYDOCGAAAAADYjCAGAAAAADZjQecQ8Pl82rZtm+Lj4+VwOCLdHQAAAAARYlmWSktL1aNHD0VFHXvciyAWAtu2bVNSUlKkuwEAAACgmSgoKFCvXr2OuZ8gFgLx8fGSzA87ISEhwr0BAAAAECklJSVKSkryZ4RjIYiFQNV0xISEBIIYAAAAgHovWWoxxTr27t2r6667Ti6XSy6XS9ddd5327dt33GMmTpwoh8MRcDvnnHMC2pSXl+uWW26R2+2W0+nUqFGjVFhYGMZXAgAAAKCtazFB7JprrtHatWu1ePFiLV68WGvXrtV1111X73HDhg3T9u3b/bd33303YP+tt96qhQsX6rXXXtOKFSu0f/9+jRgxQpWVleF6KQAAAADauBYxNTEvL0+LFy/Wp59+qrPPPluS9MILL2jgwIHauHGjUlNTj3lsXFycEhMT69zn9Xr10ksv6W9/+5suvPBCSdIrr7yipKQkffDBB7rkkktC/2IAAAAAtHktYkRs5cqVcrlc/hAmSeecc45cLpc++eST4x67fPlyde3aVaeffromT56snTt3+vetWbNGR44c0cUXX+zf1qNHD/Xt2/e45y0vL1dJSUnADQAAAAAaqkUEsaKiInXt2rXW9q5du6qoqOiYxw0fPlzz58/X0qVL9eijj2rVqlU6//zzVV5e7j9vbGysTjzxxIDjunXrdtzzzpo1y3+tmsvlonQ9AAAAgKBENIhNnz69VjGNmrfVq1dLqrvqiGVZx61GctVVV+myyy5T3759NXLkSL333nvatGmT3nnnneP2q77z3nPPPfJ6vf5bQUFBA18xAAAAAET4GrGbb75Z48ePP26blJQUffXVV9qxY0etfbt27VK3bt0a/Hzdu3dX7969tXnzZklSYmKiDh8+rL179waMiu3cuVODBg065nni4uIUFxfX4OcFAAAAgOoiGsTcbrfcbne97QYOHCiv16vPP/9cZ511liTps88+k9frPW5gqmn37t0qKChQ9+7dJUn9+/dXTEyMlixZonHjxkmStm/frq+//loPP/xwI14RAAAAANSvRVwjlp6ermHDhmny5Mn69NNP9emnn2ry5MkaMWJEQMXEtLQ0LVy4UJK0f/9+TZ06VStXrlR+fr6WL1+ukSNHyu12a8yYMZIkl8ulSZMm6fbbb9eHH36onJwc/fSnP1VmZqa/iiIAAAAAhFqLKF8vSfPnz9eUKVP8FQ5HjRqlp59+OqDNxo0b5fV6JUnR0dFat26d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b958zCAWFxenuLi4JvULAAC0HZGYFgmgeYtoEHO73XK73WE7f1UI27x5s5YtW6YuXbrUe8z69et15MgRde/ePWz9AgAAbU/VtEgAkIK4RizSPB6P1q5dK4/Ho8rKSq1du1Zr167V/v37/W3S0tK0cOFCSVJFRYWuvPJKrV69WvPnz1dlZaWKiopUVFSkw4cPS5K+/fZbPfDAA1q9erXy8/P17rvvauzYscrKytLgwYMj8joBAAAAtH4RHRELxv3336958+b5H2dlZUmSli1bpiFDhkiSNm7cKK/XK0kqLCzUv/71L0nSmWeeGXCuqmNiY2P14Ycf6sknn9T+/fuVlJSkyy67TNOmTVN0dHT4XxQAAACANimixTpai4ZekAcAAACgdQtrsY5NmzZp+fLl2rlzp3w+X8C++++/vzGnBAAAAIA2I+gg9sILL+gXv/iF3G63EhMT5ai2MqHD4SCIAQAAAEA9gg5if/jDH/Tggw/qrrvuCkd/AABAC+fzUaYdAOoTdBDbu3evxo4dG46+AACAFq6uhYvT0qQxY1i4GACqC/rvU2PHjtX7778fjr4AAIAWLC9Pmj1bysmR3G6zgLHbbR7Pnm32AwCMoEfETj31VN1333369NNPlZmZqZiYmID9U6ZMCVnnAABAy+DzmZGw4mIpI0OquoQ8IcE8zs2VFi0y4YxpigDQiPL1ffr0OfbJHA599913Te5US0P5egBAW5efL91/vxkBq+t/hV6vtHu39MADUkqK3b0DAPuErXz9li1bmtQxAADQ+pSWmmvCnM669zud0tatph0AoBHXiFVnWZZYDxoAAMTHm8IcZWV17y8rM/vj4+3tFwA0V40KYi+//LIyMzN1wgkn6IQTTtAZZ5yhv/3tb6HuGwAAaCGSk011xIICqebfaC1LKiw0VROTkyPTPwBoboKemvjYY4/pvvvu080336zBgwfLsiz973//00033aTi4mL95je/CUc/AQBAMxYVZUrUFxSYwhy9epnpiGVlJoS53dLo0RTqAIAqjSrWMWPGDE2YMCFg+7x58zR9+vQ2eQ0ZxToAADDqWkcsPd2EMNYRA9AWhK1Yx/bt2zVo0KBa2wcNGqTt27cHezoAANCKpKebEvUejynMER9vpiMyEgYAgYL+z+Kpp56qN954o9b2119/XaeddlpIOgUAAFquqChToj4z09wTwgCgtqBHxGbMmKGrrrpKH3/8sQYPHiyHw6EVK1boww8/rDOgAQAAAAACBf03qp/85Cf67LPP5Ha7tWjRIi1YsEBut1uff/65xowZE44+AgAAAECrEnSxDtRGsQ4AAAAAUoiLdZSUlPhPUlJScty2BBEAAAAAOL4GBbETTzxR27dvV9euXdWpUyc5HI5abSzLksPhUGVlZcg7CQAAAACtSYOC2NKlS9W5c2dJ0rJly8LaIQAAAABo7bhGLAS4RgwAAACA1PBsEHTVxMWLF2vFihX+x88884zOPPNMXXPNNdq7d2/jegsAAAAAbUjQQeyOO+7wF+xYt26dbrvtNl166aX67rvvdNttt4W8gwAAAADQ2gS9oPOWLVuUkZEhSXrzzTc1cuRIzZw5U1988YUuvfTSkHcQAAA0js8neTxSaakUHy8lJ0tRQf8JFsHgZw6goYIOYrGxsTpw4IAk6YMPPtCECRMkSZ07d663tD0AALBHXp60cKG0YYN06JDUvr2UliaNGSOlp0e6d60TP3MAwQg6iP3oRz/SbbfdpsGDB+vzzz/X66+/LknatGmTevXqFfIOAgCA4OTlSbNnS8XFUlKS5HRKZWVSTo5UUCBNmUIwCDV+5gCCFfRg+dNPP6127drpn//8p5577jn17NlTkvTee+9p2LBhIe8gAABoOJ/PjMoUF0sZGVJCghQdbe4zMsz2RYtMO4QGP3MAjRH0iFhycrL+/e9/19r++OOPh6RDAACg8TweMzUuKUlyOAL3ORxSr15m9MbjkVJSItLFVoefOYDGCDqISZLP59M333yjnTt3ylfjzzs//vGPQ9IxAAAQvNJSc32S01n3fqdT2rrVtENo8DMH0BhBB7FPP/1U11xzjb7//nvVXAva4XCosrIyZJ0DAADBiY83RSLKyszUuJrKysz++Hj7+9ZaNfRn7nRK+flUVARgBB3EbrrpJg0YMEDvvPOOunfvLkfNMXgAABAxycmmUl9Ojrk+qfr/pi1LKiyUsrNNO4RGQ37mvXpJf/+7tGkTFRUBGEEHsc2bN+uf//ynTj311HD0BwAANEFUlPnlvqBAys01AaCqgl9hoeR2S6NHMxITSvX9zKOjpe3bzb+pqAigStD/GT777LP1zTffhKMvAAAgBNLTzS/3WVnS7t1mFGb3bjMSxi/94XGsn3lWlpSYKFVWUlERQKCgR8RuueUW3X777SoqKlJmZqZiYmIC9p9xxhkh6xwAAGic9HQpNdVU6uOaJHvU9TP3+aTp06moCKC2oIPYT37yE0nSz372M/82h8Mhy7Io1gEAQDMSFcUv93ar+TNft46KigDqFnQQ27JlSzj6AQAA0OpQxRLAsQQdxHr37h2OfgAAALQ6VLEEcCyNmin+t7/9TYMHD1aPHj30/fffS5KeeOIJvfXWWyHtHAAAQEtWVVHR7TYVFb1eqaLC3OfmUsUSaMuC/to/99xzuu2223TppZdq3759/mvCOnXqpCeeeCLU/QMAAGjRqGIJoC4Oy7KsYA7IyMjQzJkzNXr0aMXHx+vLL7/UySefrK+//lpDhgxRcXFxuPrabJWUlMjlcsnr9SqhrgngAACgzfP5qGIJtAUNzQaNKtaRlZVVa3tcXJzKysqCPR0AAECbQBVLANUF/XeYPn36aO3atbW2v/fee8rIyAhFnwAAAACgVQt6ROyOO+7Qr371Kx06dEiWZenzzz/Xq6++qlmzZunFF18MRx8BAAAAoFUJOojdcMMNqqio0J133qkDBw7ommuuUc+ePfXkk09q/Pjx4egjAAAAALQqQRfrqK64uFg+n09du3YNZZ9aHIp1AAAAAJDCWKyjOrfb3ZTDAQAAAKBNCjqI7d69W/fff7+WLVumnTt3yufzBezfs2dPyDoHAEBLR8lyAEBdgg5iP/3pT/Xtt99q0qRJ6tatmxwORzj6BQBAi5eXJy1cKG3YIB06JLVvL6WlSWPGsIgvALR1QQexFStWaMWKFerXr184+gMAQKuQlyfNni0VF0tJSZLTKZWVSTk5UkGBNGUKYQwA2rKgJ0ekpaXp4MGD4egLAACtgs9nRsKKi6WMDCkhQYqONvcZGWb7okWmHQCgbQo6iD377LO699579dFHH2n37t0qKSkJuAEA0NZ5PGY6YlKSVHMGv8Mh9eplRsw8nsj0DwAQeUFPTezUqZO8Xq/OP//8gO2WZcnhcKiysjJknQMAoCUqLTXXhDmdde93OqWtW007AEDbFHQQu/baaxUbG6u///3vFOsAAKAO8fGmMEdZmZmOWFNZmdkfH29/3wAAzUPQQezrr79WTk6OUlNTw9EfAABavORkUx0xJ8dcE1b9b5aWJRUWStnZph0AoG0K+hqxAQMGqKCgIBx9AQCgVYiKMiXq3W4pN1fyeqWKCnOfm2u2jx7NemIA0JYFPSJ2yy236Ne//rXuuOMOZWZmKiYmJmD/GWecEbLOAQDQUqWnmxL1VeuIbd1qpiNmZ5sQRul6AGjbHJZlWcEcEFXHn+8cDkebLtZRUlIil8slr9erhLouBgAAtFk+n6mOWFpqrglLTmYkDABas4Zmg6BHxLZs2dKkjgEA0JZERUkpKZHuBQCguQk6iPXu3Tsc/QAAAACANqNBQexf//qXhg8frpiYGP3rX/86bttRo0aFpGMAAAAA0Fo16BqxqKgoFRUVqWvXrnVeI+Y/GdeIcY0YAAAA0IaF9Boxn89X578BAAAAAMGjbhMAAAAA2CyoYh0+n09z587VggULlJ+fL4fDoT59+ujKK6/UddddJ4fDEa5+AgAAAECr0eARMcuyNGrUKN14443aunWrMjMz9YMf/EDff/+9Jk6cqDFjxoSznwAAAADQajR4RGzu3Ln6+OOP9eGHH2ro0KEB+5YuXarRo0fr5Zdf1oQJE0LeSQAAGooFlAEALUGDqiZK0sUXX6zzzz9fd999d537Z86cqY8++kj/+c9/QtrBloCqiQDQPOTlSQsXShs2SIcOSe3bS2lp0pgxUnp6pHsHAGgLGpoNGvw3wq+++krDhg075v7hw4fryy+/DK6XAACESF6eNHu2lJMjud1Saqq5z8kx2/PyIt1DAACOanAQ27Nnj7p163bM/d26ddPevXtD0ikAAILh85mRsOJiKSNDSkiQoqPNfUaG2b5okWkHAEBz0OAgVllZqXbtjn1JWXR0tCoqKkLSqbo8+OCDGjRokDp06KBOnTo16JiJEyfK4XAE3M4555yANuXl5brlllvkdrvldDo1atQoFRYWhuEVAADCxeMx0xGTkqSaBXwdDqlXLzMi5vFEpn8AANTU4GIdlmVp4sSJiouLq3N/eXl5yDpVl8OHD2vs2LEaOHCgXnrppQYfN2zYMM2ZM8f/ODY2NmD/rbfeqrfffluvvfaaunTpottvv10jRozQmjVrFB0dHbL+AwDCp7TUXBPmdNa93+mUtm417QAAaA4aHMSuv/76etuEs2LijBkzJJnqjcGIi4tTYmJinfu8Xq9eeukl/e1vf9OFF14oSXrllVeUlJSkDz74QJdcckmT+gwAsEd8vCnMUVZmpiPWVFZm9sfH29+3YFDxEQDajgYHseqjSi3J8uXL1bVrV3Xq1EnnnXeeHnzwQXXt2lWStGbNGh05ckQXX3yxv32PHj3Ut29fffLJJ8cMYuXl5QEjgCUlJeF9EQCA40pONtURc3LMNWHVpydallRYKGVnm3bNFRUfAaBtadV/Zxs+fLjmz5+vpUuX6tFHH9WqVat0/vnn+0NUUVGRYmNjdeKJJwYc161bNxUVFR3zvLNmzZLL5fLfkpKSwvo6AADHFxVlAovbLeXmSl6vVFFh7nNzzfbRo5vv6BIVHwGg7Yno/5KmT59eq5hGzdvq1asbff6rrrpKl112mfr27auRI0fqvffe06ZNm/TOO+8c9zjLsuSoebV3Nffcc4+8Xq//VlBQ0Og+AgBCIz1dmjJFysqSdu+WNm0y99nZZntzHVWi4iMAtE0NnpoYDjfffLPGjx9/3DYpKSkhe77u3burd+/e2rx5syQpMTFRhw8f1t69ewNGxXbu3KlBgwYd8zxxcXHHLFoCAIic9HQzmtSSrrMKpuJjCP+XCACIsIgGMbfbLbfbbdvz7d69WwUFBerevbskqX///oqJidGSJUs0btw4SdL27dv19ddf6+GHH7atXwCA0ImKalmBhYqPANA2Bf03wo8//rjO9cIqKir08ccfh6RTdfF4PFq7dq08Ho8qKyu1du1arV27Vvv37/e3SUtL08KFCyVJ+/fv19SpU7Vy5Url5+dr+fLlGjlypNxut8aMGSNJcrlcmjRpkm6//XZ9+OGHysnJ0U9/+lNlZmb6qygCABBO1Ss+1qWlVHwEAAQn6BGxoUOHavv27f7Kg1W8Xq+GDh2qysrKkHWuuvvvv1/z5s3zP87KypIkLVu2TEOGDJEkbdy4UV6vV5JZYHrdunV6+eWXtW/fPnXv3l1Dhw7V66+/rvhq/zd7/PHH1a5dO40bN04HDx7UBRdcoLlz57KGGADAFq2h4iMAIHgOy7KsYA6IiorSjh07dNJJJwVs37RpkwYMGNAmS7mXlJTI5XLJ6/Uqoa4FbAAAOI6qqonFxeaaMKfTjIQVFprqic252AgAIFBDs0GDR8SuuOIKSZLD4dDEiRMDilVUVlbqq6++Om6BCwAAULeqio9V64ht3WqmI2Znm7L7hDAAaH0aHMRcLpckU9o9Pj5eJ5xwgn9fbGyszjnnHE2ePDn0PQQAoJXy+QIrPN55pxkFaykVHwEAjdfgIDZnzhxJppz81KlT5TxWeScAAFCvvLyjI2CHDpkRsLQ0szB1ZmakewcACLegrxFDbVwjBgAIRvVrwpKSjl4TVlDANWEA0NI1NBsEPeFhx44duu6669SjRw+1a9dO0dHRATcAAHBsPp8ZCSsuNlUSExKk6Ghzn5Fhti9aZNoBAFqvoMvXT5w4UR6PR/fdd5+6d+8uR/U6uwAA4Lg8HjMdMSkpsFS9ZB736mVGzDyelrUwNQAgOEEHsRUrVui///2vzjzzzDB0BwCA1q201FwTdqxLrZ1OUzWxtNTefgEA7BX01MSkpCRxWRkAAI0TH28Kc5SV1b2/rMzsj4+3t18AAHsFHcSeeOIJ3X333crPzw9DdwAAaN2Sk011xIICqebfNS3LlK9PTzftAACtV9BTE6+66iodOHBAp5xyijp06KCYmJiA/Xv27AlZ5wAAaG2iokyJ+oICKTfXXBNWVTWxsNBUTRw9mvXDAKC1CzqIPfHEE2HoBgAAbUd6uilRX7WO2NatZjpidrYJYZSuB4DWj3XEQoB1xAAAjeHzmeqIpaXmmrDkZEbCAKClC9s6YpL07bff6ne/+52uvvpq7dy5U5K0ePFirV+/vnG9BQCgDYqKMiXqMzPNPSEMANqOoP+T/9FHHykzM1OfffaZFixYoP3790uSvvrqK02bNi3kHQQAAACA1iboIHb33XfrD3/4g5YsWaLY2Fj/9qFDh2rlypUh7RwAAAAAtEZBB7F169ZpzJgxtbafdNJJ2r17d0g6BQAAAACtWdBBrFOnTtq+fXut7Tk5OerZs2dIOgUAAAAArVnQQeyaa67RXXfdpaKiIjkcDvl8Pv3vf//T1KlTNWHChHD0EQAAAABalaCD2IMPPqjk5GT17NlT+/fvV0ZGhn784x9r0KBB+t3vfheOPgIAgDbE55Py86V168y9zxfpHgFA6DV6HbHvvvtOX3zxhXw+n7KysnTaaaeFum8tBuuIAQAQGnl5Rxe6PnTILHSdliaNGcNC1wBahrCtI/bAAw/owIEDOvnkk3XllVdq3LhxOu2003Tw4EE98MADTeo0AABou/LypNmzpZwcye2WUlPNfU6O2Z6XF+keAkDoBB3EZsyY4V87rLoDBw5oxowZIekUAABoW3w+MxJWXCxlZEgJCVJ0tLnPyDDbFy1imiKA1iPoIGZZlhwOR63tX375pTp37hySTgEAgLbF4zHTEZOSpJq/ZjgcUq9eZkTM44lM/wAg1No1tOGJJ54oh8Mhh8Oh008/PSCMVVZWav/+/brpppvC0kkAANC6lZaaa8Kczrr3O53S1q2mHQC0Bg0OYk888YQsy9LPfvYzzZgxQy6Xy78vNjZWKSkpGjhwYFg6CQAAWrf4eFOYo6zMTEesqazM7I+Pt79vABAODQ5i119/vSSpT58+GjRokGJiYsLWKQAA0LYkJ5vqiDk55pqw6tMTLUsqLJSys007AGgNGhzEqpx33nn+fx88eFBHjhwJ2E/5dgAAEKyoKFOivqBAys0114Q5nWYkrLDQVE8cPdq0A4DWIOj/nB04cEA333yzunbtqo4dO+rEE08MuAEAADRGero0ZYqUlSXt3i1t2mTus7PNdtYRA9CaBD0idscdd2jZsmV69tlnNWHCBD3zzDPaunWrnn/+ef3xj38MRx8BAEAbkZ5u1g/zeExhjvh4Mx2RkTAArY3DsiwrmAOSk5P18ssva8iQIUpISNAXX3yhU089VX/729/06quv6t133w1XX5uthq6eDQAAAKB1a2g2CPrvS3v27FGfPn0kmevB9uzZI0n60Y9+pI8//riR3QUAAACAtiPoIHbyyScrPz9fkpSRkaE33nhDkvT222+rU6dOoewbAAAAALRKQQexG264QV9++aUk6Z577tGzzz6ruLg4/eY3v9Edd9wR8g4CAAAAQGsT9DViNXk8Hq1evVqnnHKK+vXrF6p+tShcIwYAAABACuM1YjUlJyfriiuuUOfOnfWzn/2sqacDAAAAgFYvZMVg9+zZo3nz5oXqdAAAAADQarEqBwAAAADYjCAGAAAAADYjiAEAAACAzdo1tOEVV1xx3P379u1ral8AAAAAoE1ocBBzuVz17p8wYUKTOwQAAAAArV2Dg9icOXPC2Q8AAAAAaDO4RgwAAAAAbEYQAwAAAACbEcQAAAAAwGYEMQAAAACwGUEMAAAAAGxGEAMAAAAAmxHEAAAAAMBmBDEAAAAAsBlBDAAAAABsRhADAAAAAJsRxAAAAADAZgQxAAAAALAZQQwAAAAAbEYQAwAAAACbEcQAAAAAwGYEMQAAAACwGUEMAAAAAGzWLtIdAACgNfL5JI9HKi2V4uOl5GQpij9/AgD+P4IYAAAhlpcnLVwobdggHToktW8vpaVJY8ZI6emR7h0AoDkgiAEAEEJ5edLs2VJxsZSUJDmdUlmZlJMjFRRIU6YQxgAAXCMGAEDI+HxmJKy4WMrIkBISpOhoc5+RYbYvWmTaAQDaNoIYAAAh4vGY6YhJSZLDEbjP4ZB69TIjZh5PZPoHAGg+CGIAAIRIaam5JszprHu/02n2l5ba2y8AQPNDEAMAIETi401hjrKyuveXlZn98fH29gsA0PwQxAAACJHkZFMdsaBAsqzAfZYlFRaaQh3JyZHpHwCg+SCIAQAQIlFRpkS92y3l5kper1RRYe5zc8320aNZTwwAQBADACCk0tNNifqsLGn3bmnTJnOfnU3pegDAUawjBgBAiKWnS6mppjpiaam5Jiw5mZEwAMBRLeZ/CQ8++KAGDRqkDh06qFOnTg06xuFw1Hn705/+5G8zZMiQWvvHjx8fplcBAGgroqKklBQpM9PcE8IAANW1mP8tHD58WGPHjtUvfvGLBh+zffv2gNtf//pXORwO/eQnPwloN3ny5IB2zz//fKi7DwAAAAB+LWZq4owZMyRJc+fObfAxiYmJAY/feustDR06VCeffHLA9g4dOtRqCwAAAADh0mJGxJpqx44deueddzRp0qRa++bPny+3260f/OAHmjp1qkrrWWmzvLxcJSUlATcAAAAAaKgWMyLWVPPmzVN8fLyuuOKKgO3XXnut+vTpo8TERH399de655579OWXX2rJkiXHPNesWbP8I3QAAAAAEKyIjohNnz79mAU1qm6rV68OyXP99a9/1bXXXqv27dsHbJ88ebIuvPBC9e3bV+PHj9c///lPffDBB/riiy+Oea577rlHXq/XfysoKAhJHwEAAAC0DREdEbv55pvrrVCYkpLS5Of573//q40bN+r111+vt212drZiYmK0efNmZWdn19kmLi5OcXFxTe4XAAAAgLYpokHM7XbL7XaH/Xleeukl9e/fX/369au37fr163XkyBF179497P0CAAAA0Da1mGIdHo9Ha9eulcfjUWVlpdauXau1a9dq//79/jZpaWlauHBhwHElJSX6xz/+oRtvvLHWOb/99ls98MADWr16tfLz8/Xuu+9q7NixysrK0uDBg8P+mgAAAAC0TS2mWMf999+vefPm+R9nZWVJkpYtW6YhQ4ZIkjZu3Civ1xtw3GuvvSbLsnT11VfXOmdsbKw+/PBDPfnkk9q/f7+SkpJ02WWXadq0aYqO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lJaWSpKSkpIi3BMAAAAAzUFpaalcLtcx9zus+qIa6uXz+bRt2zbFx8fL4XBEujshVVJSoqSkJBUUFCghISHS3WmTeA8ij/cg8ngPIo/3IPJ4DyKP9yDyWsJ7YFmWSktL1aNHD0VFHftKMEbEQiAqKkq9evWKdDfCKiEhodl+2NsK3oPI4z2IPN6DyOM9iDzeg8jjPYi85v4eHG8krArFOgAAAADAZgQxAAAAALAZQQzHFRcXp2nTpikuLi7SXWmzeA8ij/cg8ngPIo/3IPJ4DyKP9yDyWtN7QLEOAAAAALAZI2IAAAAAYDOCGAAAAADYjCAGAAAAADYjiAEAAACAzQhiqGXUqFFKTk5W+/bt1b17d1133XXatm3bcY+ZOHGiHA5HwO2cc86xqcetT2PeA8uyNH36dPXo0UMnnHCChgwZovXr19vU49YlPz9fkyZNUp8+fXTCCSfolFNO0bRp03T48OHjHsf3IHQa+x7wPQitBx98UIMGDVKHDh3UqVOnBh3D9yC0GvMe8D0Irb179+q6666Ty+WSy+XSddddp3379h33GL4HTfPss8+qT58+at++vfr376///ve/x23/0UcfqX///mrfvr1OPvlk/fnPf7app01DEEMtQ4cO1RtvvKGNGzfqzTff1Lfffqsrr7yy3uOGDRum7du3+2/vvvuuDb1tnRrzHjz88MN67LHH9PTTT2vVqlVKTEzURRddpNLSUpt63Xps2LBBPp9Pzz//vNavX6/HH39cf/7zn/Xb3/623mP5HoRGY98DvgehdfjwYY0dO1a/+MUvgjqO70HoNOY94HsQWtdcc43Wrl2rxYsXa/HixVq7dq2uu+66eo/je9A4r7/+um699Vbde++9ysnJ0bnnnqvhw4fL4/HU2X7Lli269NJLde655yonJ0e//e1vNWXKFL355ps297wRLKAeb731luVwOKzDhw8fs831119vXX755fZ1qo2p7z3w+XxWYmKi9cc//tG/7dChQ5bL5bL+/Oc/29XNVu3hhx+2+vTpc9w2fA/Cq773gO9B+MyZM8dyuVwNasv3IDwa+h7wPQit3NxcS5L16aef+retXLnSkmRt2LDhmMfxPWi8s846y7rpppsCtqWlpVl33313ne3vvPNOKy0tLWDbz3/+c+ucc84JWx9DhRExHNeePXs0f/58DRo0SDExMcdtu3z5cnXt2lWnn366Jk+erJ07d9rUy9atIe/Bli1bVFRUpIsvvti/LS4uTuedd54++eQTu7raqnm9XnXu3LnednwPwqe+94DvQfPB9yBy+B6E1sqVK+VyuXT22Wf7t51zzjlyuVz1/jz5HgTv8OHDWrNmTcDnV5IuvvjiY/68V65cWav9JZdcotWrV+vIkSNh62soEMRQp7vuuktOp1NdunSRx+PRW2+9ddz2w4cP1/z587V06VI9+uijWrVqlc4//3yVl5fb1OPWJ5j3oKioSJLUrVu3gO3dunXz70Pjffvtt3rqqad00003Hbcd34Pwach7wPegeeB7EFl8D0KrqKhIXbt2rbW9a9eux/158j1onOLiYlVWVgb1+S0qKqqzfUVFhYqLi8PW11AgiLUR06dPr3XRaM3b6tWr/e3vuOMO5eTk6P3331d0dLQmTJggy7KOef6rrrpKl112mfr27auRI0fqvffe06ZNm/TOO+/Y8fJahHC/B5LkcDgCHluWVWtbWxbseyBJ27Zt07BhwzR27FjdeOONxz0/34P6hfs9kPge1Kcx70Ew+B7UL9zvgcT3oD7BvAd1/dzq+3nyPWiaYD+/dbWva3tz0y7SHYA9br75Zo0fP/64bVJSUvz/drvdcrvdOv3005Wenq6kpCR9+umnGjhwYIOer3v37urdu7c2b97clG63KuF8DxITEyWZvwp1797dv33nzp21/krUlgX7Hmzbtk1Dhw7VwIED9Ze//CXo5+N7UFs43wO+Bw0T7HvQVHwPagvne8D3oGEa+h589dVX2rFjR619u3btCurnyfegYdxut6Kjo2uNfh3v85uYmFhn+3bt2qlLly5h62soEMTaiKpf6huj6q8KwQyn7969WwUFBQH/E2jrwvke9OnTR4mJiVqyZImysrIkmXnWH330kR566KHGdbgVCuY92Lp1q4YOHar+/ftrzpw5iooKfgIB34Pawvke8D1omKb8t6gx+B7UFs73gO9BwzT0PRg4cKC8Xq8+//xznXXWWZKkzz77TF6vV4MGDWrw8/E9aJjY2Fj1799fS5Ys0ZgxY/zblyxZossvv7zOYwYOHKi33347YNv777+vAQMG1FvfIOIiVSUEzdNnn31mPfXUU1ZOTo6Vn59vLV261PrRj35knXLKKdahQ4f87VJTU60FCxZYlmVZpaWl1u2332598skn1pYtW6xly5ZZAwcOtHr27GmVlJRE6qW0WI15DyzLsv74xz9aLpfLWrBggbVu3Trr6quvtrp378570Ahbt261Tj31VOv888+3CgsLre3bt/tv1fE9CJ/GvAeWxfcg1L7//nsrJyfHmjFjhtWxY0crJyfHysnJsUpLS/1t+B6EV7DvgWXxPQi1YcOGWWeccYa1cuVKa+XKlVZmZqY1YsSIgDZ8D0Lntddes2JiYqyXXnrJys3NtW699VbL6XRa+fn5lmVZ1t13321dd911/vbfffed1aFDB+s3v/mNlZuba7300ktWTEyM9c9//jNSL6HBCGII8NVXX1lDhw61OnfubMXFxVkpKSnWTTfdZBUWFga0k2TNmTPHsizLOnDggHXxxRdbJ510khUTE2MlJydb119/veXxeCLwClq+xrwHlmVKFk+bNs1KTEy04uLirB//+MfWunXrbO596zBnzhxLUp236vgehE9j3gPL4nsQatdff32d78GyZcv8bfgehFew74Fl8T0Itd27d1vXXnutFR8fb8XHx1vXXnuttXfv3oA2fA9C65lnnrF69+5txcbGWtnZ2dZHH33k33f99ddb5513XkD75cuXW1lZWVZsbKyVkpJiPffcczb3uHEcllXP1f8AAAAAgJCiaiIAAAAA2IwgBgAAAAA2I4gBAAAAgM0IYgAAAABgM4IYAAAAANiMIAYAAAAANiOIAQAAAIDNCGIAAAAAYDOCGAAAQXA4HFq0aFGku3Fcy5cvl8Ph0L59+yLdFQDAMRDEAABNMnHiRI0ePbrRx8+dO1edOnUKWX+qa2jfJk6cKIfDIYfDoZiYGHXr1k0XXXSR/vrXv8rn8wW03b59u4YPHx6W/obKoEGDtH37drlcrrA+z8cff6yRI0eqR48eLSKgAkBzQhADAEDSsGHDtH37duXn5+u9997T0KFD9etf/1ojRoxQRUWFv11iYqLi4uIi2NP6xcbGKjExUQ6HI6zPU1ZWpn79+unpp58O6/MAQGtEEAMAhNVjjz2mzMxMOZ1OJSUl6Ze//KX2798vyUyhu+GGG+T1ev0jUtOnT5ckHT58WHfeead69uwpp9Ops88+W8uXL/eft2ok7T//+Y/S09PVsWNHf5iSpOnTp2vevHl66623/OeufnxNcXFxSkxMVM+ePZWdna3f/va3euutt/Tee+9p7ty5/nbVR37y8/PlcDj0xhtv6Nxzz9UJJ5ygH/7wh9q0aZNWrVqlAQMG+Pu1a9eugOebM2eO0tPT1b59e6WlpenZZ5/176s674IFCzR06FB16NBB/fr108qVK/1tvv/+e40cOVInnniinE6nfvCDH+jdd9/1/1xrTk1888039YMf/EBxcXFKSUnRo48+GtCflJQUzZw5Uz/72c8UHx+v5ORk/eUvfznuezt8+HD94Q9/0BVXXHHcdgCA2ghiAICwioqK0uzZs/X1119r3rx5Wrp0qe68805JZgrdE088oYSEBG3fvl3bt2/X1KlTJUk33HCD/ve//+m1117TV199pbFjx2rYsGHavHmz/9wHDhzQI488or/97W/6+OOP5fF4/MdPnTpV48aN84ez7du3a9CgQUH1/fzzz1e/fv20YMGC47abNm2afve73+mLL75Qu3btdPXVV+vOO+/Uk08+qf/+97/69ttvdf/99/vbv/DCC7r33nv14IMPKi8vTzNnztR9992nefPmBZz33nvv1dSpU7V27Vqdfvrpuvrqq/2jc7/61a9UXl6ujz/+WOvWrdNDDz2kjh071tm/NWvWaNy4cRo/frzWrVun6dOn67777gsImJL06KOPasCAAcrJydEvf/lL/eIXv9CGDRuC+pkBABrIAgCgCa6//nrr8ssvb3D7N954w+rSpYv/8Zw5cyyXyxXQ5ptvvrEcDoe1devWgO0XXHCBdc899/iPk2R98803/v3PPPOM1a1bt6D7drx2V111lZWenu5/LMlauHChZVmWtWXLFkuS9eKLL/r3v/rqq5Yk68MPP/RvmzVrlpWamup/nJSUZP39738PeJ7f//731sCBA4953vXr11uSrLy8PMuyLCszM9OaPn16nX1etmyZJcnau3evZVmWdc0111gXXXRRQJs77rjDysjI8D/u3bu39dOf/tT/2OfzWV27drWee+65Op+jpuo/FwBA/dpFLgICANqCZcuWaebMmcrNzVVJSYkqKip06NAhlZWVyel01nnMF198IcuydPrppwdsLy8vV5cuXfyPO3TooFNOOcX/uHv37tq5c2dI+29ZVr3XWp1xxhn+f3fr1k2SlJmZGbCtql+7du1SQUGBJk2apMmTJ/vbVFRU1CquUf283bt3lyTt3LlTaWlpmjJlin7xi1/o/fff14UXXqif/OQnAe2ry8vL0+WXXx6wbfDgwXriiSdUWVmp6OjoWs/ncDiUmJgY8p8nAMAgiAEAwub777/XpZdeqptuukm///3v1blzZ61YsUKTJk3SkSNHjnmcz+dTdHS01qxZ4w8JVapPv4uJiQnY53A4ZFlWSF9DXl6e+vTpc9w21ftRFdpqbquqvlh1/8ILL+jss88OOE/N11rXeauOv/HGG3XJJZfonXfe0fvvv69Zs2bp0Ucf1S233FKrf3WFybp+TnX9PGtWjQQAhAZBDAAQNqtXr1ZFRYUeffRRRUWZy5LfeOONgDaxsbGqrKwM2JaVlaXKykrt3LlT5557bqOfv65zB2Pp0qVat26dfvOb3zT6HDV169ZNPXv21Hfffadrr722SedKSkrSTTfdpJtuukn33HOPXnjhhTqDWEZGhlasWBGw7ZNPPtHpp59eK/wBAOxBEAMANJnX69XatWsDtnXu3FmnnHKKKioq9NRTT2nkyJH63//+pz//+c8B7VJSUrR//359+OGH6tevnzp06KDTTz9d1157rSZMmKBHH31UWVlZKi4u1tKlS5WZmalLL720Qf1KSUnRf/7zH23cuFFdunSRy+WqNepTpby8XEVFRaqsrNSOHTu0ePFizZo1SyNGjNCECRMa9XM5lunTp2vKlClKSEjQ8OHDVV5ertWrV2vv3r267bbbGnSOW2+9VcOHD9fpp5+uvXv3aunSpUpPT6+z7e23364f/vCH+v3vf6+rrrpKK1eu1NNPPx1QqbEx9u/fr2+++cb/eMuWLVq7dq06d+6s5OTkJp0bAFo7qiYCAJps+fLlysrKCrjdf//9OvPMM/XYY4/poYceUt++fTV//nzNmjUr4NhBgwbppptu0lVXXaWTTjpJDz/8sCRT3n3ChAm6/fbblZqaqlGjRumzzz5TUlJSg/s1efJkpaamasCAATrppJP0v//975htFy9erO7duyslJUXDhg3TsmXLNHv2bL311lshHzW68cYb9eKLL2ru3LnKzMzUeeedp7lz59Y7BbK6yspK/epXv1J6erqGDRum1NTUYwar7OxsvfHGG3rttdfUt29f3X///XrggQc0ceLEJr2O1atX+99vSbrtttv87z0A4PgcVqgn0wMAAAAAjosRMQAAAACwGUEMAAAAAGxGEAMAAAAAmxHEAAAAAMBmBDEAAAAAsBlBDAAAAABsRhADAAAAAJsRxAAAAADAZgQxAAAAALAZQQwAAAAAbEYQAwAAAACb/T/gFH+djn2QsgAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 38ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.002630214125383645\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "36    False\n",
       "0     False\n",
       "47    False\n",
       "55     True\n",
       "23    False\n",
       "46    False\n",
       "35    False\n",
       "28    False\n",
       "49    False\n",
       "32    False\n",
       "1     False\n",
       "30    False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras.layers import Input, Dense, Lambda, Layer, Add\n",
    "from tensorflow.keras.models import Model\n",
    "from tensorflow.keras.losses import mse\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import plotly.graph_objects as go\n",
    "\n",
    "#data2 = pd.read_csv(r'C:\\Users\\nick8\\ASU Dropbox\\Hsiao-Ping Ni\\PhD\\Data\\4th paper- Chiller\\LT_Chiller_Data_v2.csv', encoding='unicode_escape')\n",
    "#data2 = pd.read_csv(r'C:\\Users\\Hsiao-ping.ni\\ASU Dropbox\\Hsiao-Ping Ni\\PhD\\Data\\4th paper- Chiller\\LT_Chiller_Data_v2.csv', encoding='unicode_escape')\n",
    "data = pd.read_csv('/Users/hsiaopingni/Desktop/Hsiao-Ping PhD/Data/paper- Chiller/LT_Chiller_Data.csv', encoding='unicode_escape')\n",
    "\n",
    "data = data[['Date','Discharge Temp (F)','Input % full load amps (Motor) (%)','Condenser liq temp IN (F)','Condenser liq temp OUT (F)','Chilled liq temp IN (F)','Chilled liq temp OUT (F)','Condenser saturaion (F)','Evaporator saturaion (F)','Evaporator pressure (PSIG)','Condenser pressure (PSIG)','Oil sump temp (F)','Oil pressure (PSIG)']]\n",
    "data['Date'] = pd.to_datetime(data['Date'])\n",
    "data['Date'].min(), data['Date'].max()\n",
    "\n",
    "data = data.drop(columns=['Date'])\n",
    "data2 = data.astype('float32') / 255\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "x_train2, x_test2 = train_test_split(data2, test_size=0.2, random_state=2)\n",
    "original_dim2 = x_train2.shape[1]\n",
    "\n",
    "class Sampling(Layer):\n",
    "    def call(self, inputs):\n",
    "        mean, log_var = inputs\n",
    "        batch = tf.shape(mean)[0]\n",
    "        dim = tf.shape(mean)[1]\n",
    "        epsilon = tf.keras.backend.random_normal(shape=(batch, dim))\n",
    "        return mean + tf.exp(0.5 * log_var) * epsilon\n",
    "\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Dropout, BatchNormalization\n",
    "from keras.callbacks import EarlyStopping\n",
    "\n",
    "\n",
    "latent_dim = 2  # Dimensionality of the latent space\n",
    "\n",
    "inputs = Input(shape=(original_dim2,))\n",
    "x = Dense(64, activation='relu')(inputs)\n",
    "x = Dense(32, activation='relu')(x)\n",
    "mean = Dense(latent_dim)(x)\n",
    "log_var = Dense(latent_dim)(x)\n",
    "z = Sampling()([mean, log_var])\n",
    "\n",
    "encoder = Model(inputs, [mean, log_var, z], name='encoder')\n",
    "encoder.summary()\n",
    "\n",
    "latent_inputs = Input(shape=(latent_dim,))\n",
    "x = Dense(32, activation='relu')(latent_inputs)\n",
    "x = Dense(64, activation='relu')(x)\n",
    "outputs = Dense(original_dim2, activation='sigmoid')(x)\n",
    "\n",
    "decoder = Model(latent_inputs, outputs, name='decoder')\n",
    "decoder.summary()\n",
    "\n",
    "outputs = decoder(encoder(inputs)[2])\n",
    "vae = Model(inputs, outputs, name='vae')\n",
    "\n",
    "reconstruction_loss = mse(inputs, outputs) * original_dim2\n",
    "kl_loss = 1 + log_var - tf.square(mean) - tf.exp(log_var)\n",
    "kl_loss = tf.reduce_sum(kl_loss, axis=-1)\n",
    "kl_loss *= -0.5\n",
    "vae_loss = tf.reduce_mean(reconstruction_loss + kl_loss)\n",
    "vae.add_loss(vae_loss)\n",
    "vae.compile(optimizer='adam')\n",
    "\n",
    "history=vae.fit(x_train2, x_train2, epochs=100, batch_size=32, validation_data=(x_test2, x_test2))\n",
    "\n",
    "reconstruction_loss = vae.evaluate(data2, data2, verbose=0)\n",
    "print(f\"Reconstruction Loss: {reconstruction_loss}\")\n",
    "\n",
    "encoder = Model(inputs, mean)\n",
    "latent_representation = encoder.predict(data)\n",
    "print(latent_representation)\n",
    "print(latent_representation.shape)\n",
    "\n",
    "# Visualize latent space (assuming 2D latent space)\n",
    "plt.figure(figsize=(10, 8))\n",
    "plt.scatter(latent_representation[:, 0], latent_representation[:, 1], c='b', alpha=0.5)\n",
    "plt.title('Latent Space Representation')\n",
    "plt.xlabel('Latent Dimension 1')\n",
    "plt.ylabel('Latent Dimension 2')\n",
    "plt.show()\n",
    "\n",
    "# Plot training and validation loss\n",
    "plt.plot(history.history['loss'], label='Training Loss')\n",
    "plt.plot(history.history['val_loss'], label='Validation Loss')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Loss')\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "reconstructed_data = vae.predict(x_test2)\n",
    "mse = np.mean(np.square(x_test2 - reconstructed_data), axis=1)\n",
    "\n",
    "plt.hist(mse, bins=50)\n",
    "plt.xlabel('Reconstruction Error')\n",
    "plt.ylabel('Count')\n",
    "plt.title('Distribution of Reconstruction Errors')\n",
    "plt.show()\n",
    "\n",
    "threshold = np.percentile(mse, 95)\n",
    "print(threshold)\n",
    "anomalies = mse > threshold\n",
    "anomalies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5ac6176e-9cf9-4bac-9988-1dd862477aa8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
